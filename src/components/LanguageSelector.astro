---
import { getLanguageFromURL } from '../i18n/utils';

const currentPath = Astro.url.pathname;
const currentLang = getLanguageFromURL(currentPath);

const languages = [
  { code: 'pt-BR', name: 'ðŸ‡§ðŸ‡· PortuguÃªs' },
  { code: 'en', name: 'ðŸ‡ºðŸ‡¸ English' }
];
---

<div class="relative inline-block text-left">
  <select
    id="language-selector"
    class="appearance-none bg-white border border-gray-300 rounded-lg py-2 pl-3 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-primary"
    value={currentLang}
  >
    {languages.map((lang) => (
      <option value={lang.code} selected={currentLang === lang.code}>
        {lang.name}
      </option>
    ))}
  </select>
  <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </div>
</div>

<script>
  const languageSelector = document.getElementById('language-selector') as HTMLSelectElement;

  languageSelector?.addEventListener('change', (e) => {
    const target = e.target as HTMLSelectElement;
    const newLang = target.value;
    const currentPath = window.location.pathname;
    
    // Remove any existing language prefix
    let newPath = currentPath.replace(/^\/(pt-BR|en)/, '');
    
    // Add new language prefix if not default
    if (newLang !== 'pt-BR') {
      newPath = `/${newLang}${newPath}`;
    }
    
    window.location.href = newPath;
  });
</script> 