---
import { getLanguageFromURL, useTranslations } from '../i18n/utils';

const currentPath = Astro.url.pathname;
const lang = getLanguageFromURL(currentPath);
const t = useTranslations(lang);

const services = [
  {
    title: t('services.web.title'),
    description: t('services.web.description'),
    features: t('services.web.features'),
    icon: 'web',
    details: t('services.web.details')
  },
  {
    title: t('services.api.title'),
    description: t('services.api.description'),
    features: t('services.api.features'),
    icon: 'api',
    details: t('services.api.details')
  },
  {
    title: t('services.software.title'),
    description: t('services.software.description'),
    features: t('services.software.features'),
    icon: 'software',
    details: t('services.software.details')
  },
  {
    title: t('services.ai.title'),
    description: t('services.ai.description'),
    features: t('services.ai.features'),
    icon: 'ai',
    details: t('services.ai.details')
  },
  {
    title: t('services.consulting.title'),
    description: t('services.consulting.description'),
    features: t('services.consulting.features'),
    icon: 'consulting',
    details: t('services.consulting.details')
  }
];
---

<section id="services" class="relative py-20 overflow-hidden bg-gradient-to-b from-dark to-dark-lighter">
  <!-- Grid Pattern Background -->
  <div class="absolute inset-0 bg-grid-pattern opacity-[0.03]"></div>

  <!-- Gradient Orbs -->
  <div class="absolute -top-40 -right-40 w-80 h-80 bg-primary/30 rounded-full filter blur-3xl opacity-20 animate-pulse"></div>
  <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-primary/30 rounded-full filter blur-3xl opacity-20 animate-pulse"></div>

  <div class="container mx-auto px-4 relative z-10">
    <div class="text-center mb-16">
      <span class="text-primary font-medium inline-block px-4 py-1 rounded-full bg-primary/10 mb-4">{t('services.label')}</span>
      <h2 class="text-5xl font-bold mt-2 bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">{t('services.heading')}</h2>
      <p class="text-gray-400 mt-6 max-w-3xl mx-auto text-lg">{t('services.subheading')}</p>
    </div>

    <div class="grid grid-cols-1 gap-16">
      {services.map((service, index) => (
        <div class="group">
          <div class="relative">
            <div class="absolute -inset-1 bg-gradient-to-r from-primary/20 to-primary/40 rounded-3xl blur-lg opacity-40"></div>
            <div class="relative bg-dark-lighter/50 backdrop-blur-lg p-8 rounded-2xl border border-primary/20">
              <!-- Cabeçalho do Serviço -->
              <div class="flex items-start space-x-6 mb-8">
                <div class="w-16 h-16 bg-primary/10 rounded-2xl flex items-center justify-center flex-shrink-0">
                  <svg class="w-8 h-8 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    {service.icon === 'web' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                    )}
                    {service.icon === 'api' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    )}
                    {service.icon === 'software' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                    )}
                    {service.icon === 'ai' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                    )}
                    {service.icon === 'consulting' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    )}
                  </svg>
                </div>
                <div>
                  <h3 class="text-2xl font-bold text-primary mb-2">{service.title}</h3>
                  <p class="text-gray-300 leading-relaxed">{service.description}</p>
                </div>
              </div>

              <!-- Features Principais -->
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
                {service.features.map((feature: string) => (
                  <div class="flex items-start space-x-3">
                    <div class="w-6 h-6 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0 mt-1">
                      <svg class="w-4 h-4 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                    </div>
                    <span class="text-gray-300 leading-relaxed">{feature}</span>
                  </div>
                ))}
              </div>

              {service.details && (
                <div class="border-t border-dark-border pt-8">
                  <!-- Detalhes do Serviço -->
                  <div class="mb-8">
                    <h4 class="text-xl font-semibold text-primary mb-4">{service.details.title}</h4>
                    <p class="text-gray-300 leading-relaxed mb-6">{service.details.description}</p>
                    
                    {service.details.benefits && (
                      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        {service.details.benefits.map((benefit: string) => (
                          <div class="flex items-center space-x-3 bg-dark/50 p-3 rounded-xl">
                            <svg class="w-5 h-5 text-primary flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span class="text-gray-300">{benefit}</span>
                          </div>
                        ))}
                      </div>
                    )}
                  </div>

                  {service.details.features && (
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                      {Object.entries(service.details.features).map(([key, section]: [string, any]) => (
                        <div class="relative group">
                          <div class="absolute -inset-0.5 bg-gradient-to-r from-primary/20 to-primary/30 rounded-2xl blur opacity-0 group-hover:opacity-100 transition duration-300"></div>
                          <div class="relative bg-dark p-6 rounded-xl border border-dark-border group-hover:border-primary/30 transition-all duration-300">
                            <h5 class="text-lg font-semibold text-primary mb-4">{section.title}</h5>
                            <ul class="space-y-3">
                              {section.items.map((item: string) => (
                                <li class="flex items-start space-x-3">
                                  <svg class="w-5 h-5 text-primary flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                  </svg>
                                  <span class="text-gray-300 leading-relaxed text-sm">{item}</span>
                                </li>
                              ))}
                            </ul>
                          </div>
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .animate-pulse {
    animation: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 0.2;
    }
    50% {
      opacity: 0.3;
    }
  }
</style> 