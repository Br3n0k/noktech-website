---
import { getLanguageFromURL, useTranslations } from '../i18n/utils';

const currentPath = Astro.url.pathname;
const lang = getLanguageFromURL(currentPath);
const t = useTranslations(lang);

const services = [
  {
    title: t('services.web.title'),
    description: t('services.web.description'),
    features: t('services.web.features'),
    icon: 'web'
  },
  {
    title: t('services.api.title'),
    description: t('services.api.description'),
    features: t('services.api.features'),
    icon: 'api',
    details: {
      title: t('services.api.details.title'),
      description: t('services.api.details.description'),
      benefits: t('services.api.details.benefits'),
      features: {
        security: {
          title: t('services.api.details.features.security.title'),
          items: t('services.api.details.features.security.items')
        },
        performance: {
          title: t('services.api.details.features.performance.title'),
          items: t('services.api.details.features.performance.items')
        },
        integration: {
          title: t('services.api.details.features.integration.title'),
          items: t('services.api.details.features.integration.items')
        }
      }
    }
  },
  {
    title: t('services.software.title'),
    description: t('services.software.description'),
    features: t('services.software.features'),
    icon: 'software'
  },
  {
    title: t('services.ai.title'),
    description: t('services.ai.description'),
    features: t('services.ai.features'),
    icon: 'ai',
    details: {
      title: t('services.ai.details.title'),
      description: t('services.ai.details.description'),
      benefits: t('services.ai.details.benefits')
    }
  },
  {
    title: t('services.consulting.title'),
    description: t('services.consulting.description'),
    features: t('services.consulting.features'),
    icon: 'consulting'
  }
];
---

<section id="services" class="relative py-20 overflow-hidden">
  <!-- Grid Pattern Background -->
  <div class="absolute inset-0 bg-grid-pattern opacity-[0.03]"></div>

  <!-- Gradient Orbs -->
  <div class="absolute -top-40 -right-40 w-80 h-80 bg-primary/30 rounded-full filter blur-3xl opacity-20"></div>
  <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-primary/30 rounded-full filter blur-3xl opacity-20"></div>

  <div class="container mx-auto px-4 relative z-10">
    <div class="text-center mb-12">
      <span class="text-primary font-medium">{t('services.label')}</span>
      <h2 class="text-4xl font-bold mt-2">{t('services.heading')}</h2>
      <p class="text-gray-400 mt-4 max-w-2xl mx-auto">{t('services.subheading')}</p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      {services.map((service, index) => (
        <div class={`bg-dark-lighter p-8 rounded-2xl border border-dark-border hover:border-primary/50 transition-colors group ${service.details?.features ? 'md:col-span-2' : ''}`}>
          <div class="flex items-start space-x-4">
            <div class="flex-shrink-0">
              <div class="w-12 h-12 rounded-lg bg-dark flex items-center justify-center group-hover:bg-primary/10 transition-colors">
                <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  {service.icon === 'web' && (
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                  )}
                  {service.icon === 'api' && (
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  )}
                  {service.icon === 'software' && (
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                  )}
                  {service.icon === 'ai' && (
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  )}
                  {service.icon === 'consulting' && (
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                  )}
                </svg>
              </div>
            </div>

            <div class="flex-1">
              <h3 class="text-xl font-bold mb-2">{service.title}</h3>
              <p class="text-gray-400 mb-4">{service.description}</p>

              <ul class="space-y-2">
                {service.features.map((feature: string) => (
                  <li class="flex items-center text-gray-300">
                    <svg class="w-5 h-5 text-primary mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span>{feature}</span>
                  </li>
                ))}
              </ul>

              {service.details && (
                <div class="mt-6 pt-6 border-t border-dark-border">
                  <h4 class="text-lg font-semibold mb-3">{service.details.title}</h4>
                  <p class="text-gray-400 mb-6 leading-relaxed">{service.details.description}</p>
                  
                  {service.details.benefits && (
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                      {service.details.benefits.map((benefit: string) => (
                        <div class="flex items-center space-x-2">
                          <svg class="w-5 h-5 text-primary flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                          </svg>
                          <span class="text-sm text-gray-300">{benefit}</span>
                        </div>
                      ))}
                    </div>
                  )}

                  {service.details.features && (
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mt-6">
                      {Object.entries(service.details.features).map(([key, section]: [string, any]) => (
                        <div class="bg-dark p-4 rounded-lg">
                          <h5 class="text-primary font-semibold mb-3">{section.title}</h5>
                          <ul class="space-y-2">
                            {section.items.map((item: string) => (
                              <li class="flex items-start space-x-2 text-sm text-gray-300">
                                <svg class="w-4 h-4 text-primary flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                <span>{item}</span>
                              </li>
                            ))}
                          </ul>
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section> 